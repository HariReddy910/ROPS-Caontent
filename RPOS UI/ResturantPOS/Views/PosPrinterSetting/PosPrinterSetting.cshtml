@Model ICollection<ResturantPOS.Models.OtherSetting>
    <head>

        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    </head>

<h4>Printer Setting</h4>
                      <div class="container">
                          <div class="row">
                              <div class="col-md-3">
                              </div>
                              <div class="col-md-6">
                                  <form class="form-horizontal">
                                      <div class="form-group">
                                          <label for="text" class="col-sm-4 control-label">Printer Type</label>
                                          <div class="col-sm-8">
                                              <select class="form-control" id="PrinterType">
                                                  <option>Ticket Printer</option>
                                                  <option>Invoice Printer</option>

                                              </select>
                                          </div>
                                      </div>
                                      <div class="form-group">
                                          <label for="text" class="col-sm-4 control-label">Printer Name</label>
                                          <div class="col-sm-8">
                                              @Html.DropDownList("PrinterName", new SelectList(ViewBag.PrinterName, "Value", "Text"),"Select", new { @class = " form-control" })
                                          </div>
                                      </div>


                                      <div class="form-group">
                                          <div class="col-sm-offset-2 col-sm-10">
                                              <div class="checkbox">
                                                  <label>
                                                      <input type="checkbox" id="IsEnabled">Is Enabled
                                                  </label>
                                              </div>
                                          </div>
                                      </div>
                                      <h5>
                                          <b>
                                              Note:If printer is shared on network then use network path of shared printer as printer name
                                              eg:\\ServerName\PrinterName
                                          </b>
                                      </h5>
                                      <button id="BtnCatCreate" type="button" class="btn btn-success" style="margin-left: 29%;"><i class="fa fa-floppy-o fa-2x" aria-hidden="true"></i> Save.</button>
                                  </form>
                              </div>
                              <div class="col-md-3">
                              </div>
                          </div>
                      </div>sss

        <div style="width:100%;float:left;padding-bottom:50px;">
            <h4> Category List</h4>
            @{
                if (Model != null)
                {
                    var grid = new WebGrid(Model, canPage: true, rowsPerPage: 50, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
                    grid.Pager(WebGridPagerModes.NextPrevious);

                    @grid.GetHtml(tableStyle: "table table-responsive table-bordered",
            headerStyle: "",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-row-style",
            columns:
             grid.Columns(
            grid.Column("NO", style: "col2", format: @<text><span id="Id" class="display-mode">@item.Id</span>@Html.TextBox("Cat-Edit", (int)item.Id, new { @class = "edit-mode form-control" })</text>),
             grid.Column("PrinterType", style: "col2", format: @<text><span id="PrinterType" class="display-mode">@item.PrinterType</span>@Html.DropDownList("PrinterType", new SelectList(ViewBag.PrinterType, "Value", "Text", (string)item.PrinterType), new { @class = "edit-mode form-control" }) </text>),
                  grid.Column("PrinterName", style: "col2", format: @<text><span id="PrinterName" class="display-mode">@item.PrinterName</span>@Html.DropDownList("PrinterName", new SelectList(ViewBag.PrinterName, "Value", "Text", (string)item.PrinterName), new { @class = "edit-mode form-control" }) </text>), 
                 grid.Column("IsEnabled", style: "col2", format: @<text><span id="IsEnabled" class="display-mode">@item.IsEnabled</span>@Html.TextBox("IsEnabled-Edit", (string)item.IsEnabled, new { @class = "edit-mode form-control" })</text>),
            grid.Column("", style: "col1", format: @<text>
                    <div style="padding-left:20px;">
                        <button class="btn btn-default edit-item display-mode" id="@item.Id">Edit</button>
                        <button class="btn btn-default display-mode delete-item" id="@item.Id">Delete</button>
                        <button class="btn btn-default save-item edit-mode" id="@item.Id">Save</button>
                        <button class="btn btn-default cancel-item edit-mode" id="@item.Id">Cancel</button>
                    </div>
            </text>)))
                }
            }
        </div>

        <script type="text/javascript">
            initialize();

            function initialize() {

                $('.edit-mode').hide();

                $('.edit-item').on('click', function () {
                    $('.edit-mode').hide();
                    $('.delete-mode').hide();
                    $('.display-mode').show();
                    var tr = $(this).parents('tr:first');
                    tr.find('.edit-mode, .display-mode').toggle();
                });
                $('.cancel-item').on('click', function () {
                    var tr = $(this).parents('tr:first');
                    tr.find('.display-mode,.edit-mode').toggle();
                });
                $('.delete-item').on('click', function () {
                    if (confirm("Are you sure to delete this contact?")) {
                        var tr = $(this).parents('tr:first');
                        var ID = tr.find('#Cat-Edit').val();
                        var CAT = new Object();
                        CAT.Id = ID;
                        $.ajax({

                            type: "POST",
                            url: '/PosPrinterSetting/DeleteContact/',
                            data: JSON.stringify(CAT),
                            contentType: "application/json;charset=utf-8",
                            success: function (data, status, xhr) {

                                window.location.reload();
                            },
                            error: function (xhr) {

                                window.location.reload();
                            }
                        });
                    }

                });

                $('.save-item').on('click', function () {
                    var tr = $(this).parents('tr:first');
                    var ID = tr.find('#Cat-Edit').val();
                    var PrinterType = tr.find('#PrinterType-Edit').val();
                    var PrinterName = tr.find('#PrinterName-Edit').val();
                    var IsEnabled = tr.find('#IsEnabled-Edit').val();



                    var CAT_save = new Object();
                    CAT_save.ID = ID;
                    CAT_save.PrinterType = PrinterType;
                    CAT_save.PrinterName = PrinterName;
                    CAT_save.IsEnabled = IsEnabled;



                    $.ajax({

                        type: "POST",
                        url: '/PosPrinterSetting/PosPrinterSettingUpdate/',
                        data: JSON.stringify(CAT_save),
                        contentType: "application/json;charset=utf-8",
                        success: function (data, status, xhr) {

                            window.location.reload();
                        },
                        error: function (xhr) {

                            window.location.reload();
                        }
                    });

                    window.location.reload();
                    tr.find('.edit-mode, .display-mode').toggle();
                });

                $('#BtnCatCreate').on('click', function () {

                    var tr = $(this).parents('tr:first');
                    var ID = tr.find('#Cat').val();
                    var PrinterType = $("#PrinterType").val();
                    var PrinterName = $("#PrinterName").val();
                    var IsEnabled = $("#IsEnabled").val();



                    var CAT_save = new Object();
                    CAT_save.ID = ID;
                    CAT_save.PrinterType = PrinterType;
                    CAT_save.PrinterName = PrinterName;
                    CAT_save.IsEnabled = IsEnabled;



                    $.ajax({

                        type: "POST",
                        url: '/PosPrinterSetting/SavePosPrinterSetting/',
                        data: JSON.stringify(CAT_save),
                        contentType: "application/json;charset=utf-8",
                        success: function (data, status, xhr) {

                            window.location.reload();
                        },
                        error: function (xhr) {

                        }
                    });
                    window.location.reload();
                });
            }
        </script>








    </body>
