
@model ICollection<ResturantPOS.Models.Kitchen>



<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<!--web grid styles starts-->
<style type="text/css">
   
    /*styles for altering rows*/
    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }
</style>

<link href="~/Content/SectionInfo.css" rel="stylesheet" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


<section class="kitchen">
    <h4>Kitchen/Section Master</h4>
    <!--kitchen/section Name -->
    <div class="container">
        <div class="row">
            <div class="col-md-3">
            </div>
            <div class="col-md-6">
                <div class="form-text">
                    <label class="form-text-label">Kitchen/Section Name</label> <input type="text"  id="Kitchenname"  class="label-text-box">
                </div>
                <div class="form-text">
                    <label class="form-text-label">Printer Name</label>  
                   @Html.DropDownList("Printer-Edit", new SelectList(ViewBag.Printer, "Value", "Text"), "Select", new { @class ="label-text-box" })





                </div >
                <div class="form-text">
                    <input type = "checkbox"  id="IsEnabled"name="IsEnabled" value="IsEnabled" style="margin-top: 16px;" ><label class="form-text-label">Is Enabled</label>
                </div>
                <div class="form-text">
                    <label>
                        Note:If printer is shared on network then use network path of shared printer as printer name
                        <br />
                        eg : \\ServerName\PrinterName
                    </label>
                </div>

            </div>
            <div class="col-md-3">
            </div>
        </div>
    </div>





    <!--buttons-->
    <div class="container kitchen-inner">
        <div class="row">
            <div class="col-md-2">
            </div>

            <div class="col-md-2">
                <button id = "controls-inner" style="margin-left:190%;"><i class="fa fa-floppy-o fa-2x" aria-hidden="true"></i><strong class="txt">Save</strong></button>
            </div>


            <div class="col-md-3">
            </div>


        </div>
    </div>
</section>
<div style = "width:100%;float:left;padding-bottom:50px;" >
    <h4 > Kitchen info</h4>
    @{
        if (Model != null)
        {
            var grid = new WebGrid(Model, canPage: true, rowsPerPage: 50, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
grid.Pager(WebGridPagerModes.NextPrevious);

            @grid.GetHtml(tableStyle: "table table-responsive table-bordered",
            headerStyle: "",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-row-style",
            columns:
             grid.Columns(
            grid.Column("Kitchenname", style: "col2", format: @<text><span id="Kitchenname" class="display-mode">@item.Kitchenname</span>@Html.TextBox("kit-Edit", (String)item.Kitchenname, new { @class = "edit-mode form-control" })</text>),
              grid.Column("Printer", style: "col2", format: @<text><span id="Printer" class="display-mode">@item.Printer</span>@Html.DropDownList("Printer-Edit", new SelectList(ViewBag.Printer, "Value", "Text", (string)item.Printer), new { @class = "edit-mode form-control" }) </text>),
              

            grid.Column("IsEnabled", style: "col2", format: @<text><span id="IsEnabled" class="display-mode">@item.IsEnabled</span><input type="checkbox" id="IsEnabled-Edit" class = "edit-mode checkbox" /></text>),
           grid.Column("", style: "col1", format: @<text>
                    <div style="padding-left:20px;">
                        <button class="btn btn-default edit-item display-mode" id="@item.Kitchenname">Edit</button>
                        <button class="btn btn-default display-mode delete-item" id="@item.kitchenname">Delete</button>
                        <button class="btn btn-default save-item edit-mode" id="@item.Kitchenname">Save</button>
                        <button class="btn btn-default cancel-item edit-mode" id="@item.Kitchenname">Cancel</button>
                    </div>
        </text>)))
        }
    }
</div>
<script type="text/javascript">
    initialize();

    function initialize() {

        $('.edit-mode').hide();

        $('.edit-item').on('click', function () {
            $('.edit-mode').hide();
            $('.delete-mode').hide();
            $('.display-mode').show();
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        });
        $('.cancel-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.display-mode,.edit-mode').toggle();
        });
        $('.delete-item').on('click', function () {
            if (confirm("Are you sure to delete this Kitcen?")) {
                var tr = $(this).parents('tr:first');
                var Kitchenname = tr.find('#kit-Edit').val();
                var KIT = new Object();
                KIT.Kitchenname = Kitchenname;
                $.ajax({

                    type: "POST",
                    url: '/Kitchen/DeleteKitchen/',
                    data: JSON.stringify(KIT),
                    contentType: "application/json;charset=utf-8",
                    success: function (data, status, xhr) {

                        window.location.reload();
                    },
                    error: function (xhr) {

                        window.location.reload();
                    }
                });
            }

        });

        $('.save-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            var Kitchenname = tr.find('#kit-Edit').val();
            alert(Kitchenname);
            var Printer = tr.find('#Printer-Edit').val();
            if (tr.find('#IsEnabled-Edit').is(":checked", true)) {
                var IsEnabled = 'Enable';
            }
            else { var IsEnabled = 'Desable';}
            
            var oldKitchenName = tr.find('#Kitchenname ').text();        

            var KitchenIns = new Object();
            KitchenIns.Kitchenname = Kitchenname;
            KitchenIns.Printer = Printer;
            KitchenIns.IsEnabled = IsEnabled;
            


            $.ajax({

                type: "POST",
                url: '/Kitchen/KitchenUpdate/',
                data: JSON.stringify({ oldKitchenName, KitchenIns }),
                contentType: "application/json;charset=utf-8",
                success: function (data, status, xhr) {

                    window.location.reload();
                },
                error: function (xhr) {

                    window.location.reload();
                }
            });

            window.location.reload();
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $('#controls-inner').on('click', function () {

            var tr = $(this).parents('tr:first');
            var Kitchenins = $("#Kitchenname").val();
            var Printerins = $("#Printer-Edit").val();
            if ($("#IsEnabled").is(':checked', true)) {
                var IsEnabledins = 'Enable';
            }
            else {
                var IsEnabledins = 'Desable';
            }
           


            var KIT = new Object();
            KIT.Kitchenname = Kitchenins;
            KIT.Printer = Printerins;
            KIT.IsEnabled = IsEnabledins;
           


            $.ajax({

                type: "POST",
                url: '/Kitchen/SaveKitchen/',
                data: JSON.stringify(KIT),
                contentType: "application/json;charset=utf-8",
                success: function (data, status, xhr) {

                    window.location.reload();
                },
                error: function (xhr) {

                }
            });
            window.location.reload();
        });
    }
</script>










